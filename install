#!/bin/bash

# TODO: auto-detect this
os="ubuntu" # "arch"

# specify packages
packageList="vim tmux git nmap jq firefox cscope docker"

##############
# Setup/formalities
##############
if [[ `id -u` -ne 0 ]]; then
  echo -e "Insufficient permissions, please run as root. \n Aborting..."
  exit 1
fi

dir0=`pwd`

##############
# Packages
##############
echo "Installing Packages..."

if [[ $os == "ubuntu" ]]; then
  apt-get install -y $packageList 
  if [ $? -eq 0 ]; then
    echo "Complete!"
  else
    echo "Failed"
  fi
elif [[ $os == "arch" ]]; then
  pacman -S --noconfirm $packageList
  if [ $? -eq 0 ]; then
    echo "Complete!"
  else
    echo "Failed"
  fi
else
  echo -e "Please configure the install script. \n Aborting..."
fi 


##############
# .vim dir
##############

# Backup existing vim directory
if [ -d "$HOME/.vim" ]; then
  echo "Backing up existing .vim directory..."
  if [ ! -d "$HOME/.vim_backup" ]; then
    cp -r $HOME/.vim $HOME/.vim_backup 2>/dev/null
    if [ $? -eq 0 ]; then
      echo "Complete!"
    else
      echo "Failed"
    fi
    chown -R $SUDO_USER:$SUDO_USER $HOME/.vim
    chown $SUDO_USER:$SUDO_USER $HOME/.vim_backup
  else
    echo "Unable to backup .vim directory. Aborting..."
    exit 1
  fi
fi

# Installing vim directory
echo "Installing .vim directory..."
cp -r ./.vim $HOME/.vim  2>/dev/null
if [ $? -eq 0 ]; then
  echo "Complete!"
else
  echo "Failed"
fi
chown -R $SUDO_USER:$SUDO_USER $HOME/.vim

##############
# bin dir
##############

if [ ! -d "$HOME/bin" ]; then
  echo "Creating $HOME/bin directory..."
  mkdir $HOME/bin 2>/dev/null
  if [ $? -eq 0 ]; then
    echo "Complete!"
  else
    echo "Failed"
  fi
fi

echo "Copying..."
cp ./bin/* $HOME/bin 2>/dev/null
if [ $? -eq 0 ]; then
  echo "Complete!"
else
  echo "Failed"
fi
chown -R $SUDO_USER:$SUDO_USER $HOME/bin

##############
# configs
##############
echo "Installing configurations..."

# bashrc
if [ -f $HOME/.bashrc ]; then
  if [ ! -f $HOME/.bashrc_backup ]; then
    mv $HOME/.bashrc $HOME/.bashrc_backup 2>/dev/null
    if [ $? -eq 0 ]; then
      echo "Complete!"
    else
      echo "Failed"
    fi
  else
    echo "Unable to backup configurations: bashrc"
    exit 1
  fi
fi
echo "Copying..."
cp config/.bashrc $HOME/.bashrc 2>/dev/null
if [ $? -eq 0 ]; then
  echo "Complete!"
else
  echo "Failed"
fi
chown $SUDO_USER:$SUDO_USER $HOME/.bashrc

# vimrc
if [ -f $HOME/.vimrc ]; then
  if [ ! -f $HOME/.vimrc_backup ]; then
    mv $HOME/.vimrc $HOME/.vimrc_backup 2>/dev/null
    if [ $? -eq 0 ]; then
      echo "Complete!"
    else
      echo "Failed"
    fi
  else
    echo "Unable to backup configurations: vimrc"
    exit 1
  fi
fi
echo "Copying..."
cp config/.vimrc $HOME/.vimrc 2>/dev/null
if [ $? -eq 0 ]; then
  echo "Complete!"
else
  echo "Failed"
fi
chown $SUDO_USER:$SUDO_USER $HOME/.vimrc

# tmux.conf
if [ -f $HOME/.tmux.conf ]; then
  if [ ! -f $HOME/.tmux.conf_backup ]; then
    mv $HOME/.tmux.conf $HOME/.tmux.conf 2>/dev/null
    if [ $? -eq 0 ]; then
      echo "Complete!"
    else
      echo "Failed"
    fi
  else
    echo "Unable to backup configurations: tmux.conf"
    exit 1
  fi
fi
echo "Copying..."
cp config/.tmux.conf $HOME/.tmux.conf 2>/dev/null
if [ $? -eq 0 ]; then
  echo "Complete!"
else
  echo "Failed"
fi
chown $SUDO_USER:$SUDO_USER $HOME/.tmux.conf

exit 0

